/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    
    int ans=0;
    void print_sum(vector<int> res, int len)
    {
        reverse(res.begin(), res.end());
        int sum=0;
        for(int i=0;i<len;i++) 
            // cout<<res[i]<<" ";
        {
            sum = sum + res[i]*pow(10,i);
        }
        ans += sum;
        // cout<<"\n";
    }
    
    void sum_paths(TreeNode* root, vector<int> path, int len)
    {
        if(root==NULL)
            return;
        
        path.push_back(root->val);
        len++;
        
        if(root->left==NULL and root->right==NULL)
            print_sum(path, len);
        
        else
        {
            sum_paths(root->left, path, len);
            sum_paths(root->right, path, len);
        }
        
    }
    
        
public:
    int sumNumbers(TreeNode* root) 
    {
        vector<int> path;
        sum_paths(root, path,0);
        return ans;
    }
};
